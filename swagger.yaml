consumes:
- application/json
definitions:
  Body:
    description: Body contains body of response
    properties:
      message:
        description: The validation message
        type: string
        x-go-name: Message
    required:
    - message
    type: object
    x-go-package: github.com/Sayitsocial/Sayitsocial_go/pkg/routes/authentication
host: sayitsocial-dev.ddns.net:8000
info:
  description: Documentation of SayItSocialAPI.
  title: classification SayItSocial.
  version: 1.0.0
paths:
  /api/create/org:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This will show create a new volunteer.
      operationId: createOrganisation
      parameters:
      - description: Email of Organisation
        in: query
        name: email
        required: true
        type: string
        x-go-name: Email
      - description: Password of user
        in: query
        name: password
        required: true
        type: string
        x-go-name: Password
      - description: Name of Organisation
        in: query
        name: org_name
        required: true
        type: string
        x-go-name: OrgName
      - description: Type of Organisation
        format: int64
        in: query
        name: org_type
        required: true
        type: integer
        x-go-name: TypeOfOrg
      - description: Locality of Organisation
        in: query
        name: locality
        required: true
        type: string
        x-go-name: Locality
      - description: Owner of Organisation
        in: query
        name: owner
        required: true
        type: string
        x-go-name: Owner
      - description: Registration Number of organisation according to ngodarpan if applicable
        in: query
        name: reg_no
        type: string
        x-go-name: RegistrationNo
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      summary: Create a new organisation
      tags:
      - user_creation
  /api/create/vol:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This will show create a new volunteer.
      operationId: createVolunteer
      parameters:
      - description: First name of user
        in: query
        name: first_name
        required: true
        type: string
        x-go-name: FirstName
      - description: Last name of user
        in: query
        name: last_name
        required: true
        type: string
        x-go-name: LastName
      - description: Email of user
        in: query
        name: email
        required: true
        type: string
        x-go-name: Email
      - description: Password of user
        in: query
        name: password
        required: true
        type: string
        x-go-name: Password
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      summary: Create a new volunteer
      tags:
      - user_creation
  /api/event:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: This will show create a new volunteer.
      operationId: getEvent
      parameters:
      - description: Event id of event
        in: query
        name: event_id
        type: string
        x-go-name: EventID
      - description: Name of event
        in: query
        name: name
        type: string
        x-go-name: Name
      - description: Start time of event [unix timestamp]
        format: int64
        in: query
        name: start_time
        type: integer
        x-go-name: StartTime
      - description: Host time of event [unix timestamp]
        format: int64
        in: query
        name: host_time
        type: integer
        x-go-name: HostTime
      - description: Type of category [Refer to event_category]
        format: int64
        in: query
        name: category
        type: integer
        x-go-name: Category
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      summary: |-
        Get details of event
        Atleast one param is required
      tags:
      - event
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This will show create a new volunteer.
      operationId: createEvent
      parameters:
      - description: ID of host of event (org)
        in: query
        name: organisation_id
        type: string
        x-go-name: OrganisationID
      - description: ID of host of event (user)
        in: query
        name: volunteer_id
        type: string
        x-go-name: VolunteerID
      - description: Name of event
        in: query
        name: name
        type: string
        x-go-name: Name
      - description: Name of event
        in: query
        name: description
        type: string
        x-go-name: Description
      - description: Start time of event [unix timestamp]
        format: int64
        in: query
        name: start_time
        type: integer
        x-go-name: StartTime
      - description: Type of category [Refer to event_category]
        format: int64
        in: query
        name: category
        type: integer
        x-go-name: Category
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      summary: Create a new event
      tags:
      - event
  /api/event/attendee:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: This will show create a new volunteer.
      operationId: getEventAttendee
      parameters:
      - description: Generated ID
        in: query
        name: generated_id
        type: string
        x-go-name: GeneratedID
      - description: ID of host of event (user)
        in: query
        name: volunteer_id
        type: string
        x-go-name: VolunteerID
      - description: ID of event
        in: query
        name: event_id
        type: string
        x-go-name: EventID
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      summary: |-
        Get attendees of event
        Atleast one param is required
      tags:
      - event
  /api/event/host:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: This will show create a new volunteer.
      operationId: getEventHost
      parameters:
      - description: Generated ID
        in: query
        name: generated_id
        type: string
        x-go-name: GeneratedID
      - description: ID of host of event (org)
        in: query
        name: organisation_id
        type: string
        x-go-name: OrganisationID
      - description: ID of host of event (user)
        in: query
        name: volunteer_id
        type: string
        x-go-name: VolunteerID
      - description: ID of event
        in: query
        name: event_id
        type: string
        x-go-name: EventID
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      summary: |-
        Get hosts of event
        Atleast one param is required
      tags:
      - event
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login to existing account
      operationId: login
      parameters:
      - description: Username of user
        in: query
        name: username
        required: true
        type: string
        x-go-name: Username
      - description: Password of user
        in: query
        name: password
        required: true
        type: string
        x-go-name: Password
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout from existing account
      operationId: logout
      responses:
        "200":
          $ref: '#/responses/successResponse'
      schemes:
      - http
      tags:
      - auth
produces:
- application/json
responses:
  successResponse:
    description: Success
    schema:
      $ref: '#/definitions/Body'
schemes:
- http
securityDefinitions:
  cookieAuth:
    description: Doesnt work from swagger, head over to /login
    in: cookie
    name: SESSIONID
    type: apiKey
swagger: "2.0"
